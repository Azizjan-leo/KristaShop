@using KristaShop.Common.Enums
@using KristaShop.Common.Extensions
@using Module.Common.Admin.Admin.Models
@model Module.Order.Business.Models.OrderAdminDTO
@{
    ViewData["Title"] = "Заказ подробно";

    var btnsList = new List<MenuButtonsViewModel>();
    @if(!Model.IsReviewed) {
        btnsList.Add(new MenuButtonsViewModel("Отметить как просмотренный", "", classes: "btn-main-primary", onClickJSCode: "sendCheckOrderAsReviewedRequest(); return false;"));
    }

    if (!Model.IsProcessedPreorder && !Model.IsProcessedRetail) {
        btnsList.Add(new MenuButtonsViewModel("Удалить заказ", "", "", "krista-delete", null, "btn-main-danger", $"DeleteOrder({Model.Id}); return false;"));
    }
    if (!Model.IsProcessedPreorder || !Model.IsProcessedRetail) {
        btnsList.Add(new MenuButtonsViewModel("Добавить", "", "", "krista-plus", null, "btn-main-success", $"AddToOrder({Model.Id}, {(!Model.IsProcessedPreorder ? "true" : "false")}, {(!Model.IsProcessedRetail ? "true" : "false")}); return false;"));
    }

    @if (ViewBag.ModelId > 0 && ViewBag.ColorId > 0) {
        btnsList.Add(new MenuButtonsViewModel("Назад", "Index", "Orders", "", new Dictionary<string, string>() { { "modelId", ViewBag.ModelId.ToString() }, { "colorId", ViewBag.ColorId.ToString() }, { "mode", ViewBag.CatalogsMode } }, "btn-main-info"));
    } else {
        btnsList.Add(new MenuButtonsViewModel("Назад", "Index", "Orders", "", null, "btn-main-info"));
    }
    ViewData["NavbarButtons"] = btnsList;
}
<div class="row">
    <div class="col-xl-4 col-md-6 col-sm-12">
        <div class="order-top-info">
            <h1 class="mb-4"><svg class="krista-icon krista-shop"><use xlink:href="#krista-shop"></use></svg> Информация о заказе</h1>
            <p class="label">Менеджер клиента</p>
            <p class="field">@Model.ManagerFullName</p>
            <hr />
            <p class="label">Дата заказа</p>
            <p class="field">@(Model.CreateDate.ToFormattedString())</p>
            <hr />
            <p class="label">Упаковка</p>
            <p class="field">@(Model.HasExtraPack ? "дополнительная упаковка" : "стандартная упаковка")</p>
            <hr />
            <p class="label">Примечание к заказу</p>
            <p class="field-comment form-control">@Model.UserComments</p>
        </div>
    </div>
    <div class="col-xl-4 col-md-6 col-sm-12 order-top-info">
        @await Component.InvokeAsync("UserInfo", new {userId = Model.UserId})
    </div>
</div>

<div class="row">
    <div class="col-auto pb-4 pt-5">
        <h4 class="h4 font-weight-bold">Заказ №@Model.Id</h4>
    </div>
</div>

<div class="row">
    <div class="col-12 table-responsive order-details">
        @if (Model.Details.Any(x => x.CatalogId == (int)CatalogType.Preorder)) {
            <div class="order-header-panel panel-orange">
                <div class="left-text-section">
                    <strong>Предзаказ</strong><span> @Model.CreateDate.ToBasicString() | </span>
                    Единиц: <span class="jsOrderTotalAmountPreorder">@Model.Details.Where(x => x.CatalogId == (int)CatalogType.Preorder).Sum(x => x.Amount)</span> |
                    Сумма: <span class="jsOrderTotalPricePreorder">@Model.Details.Where(x => x.CatalogId == (int)CatalogType.Preorder).Sum(x => x.Amount * x.Price).ToTwoDecimalPlaces() $</span> |
                    Предоплата: <span class="jsOrderTotalPrepayPreorder">@Model.PrepayTotalSum.ToTwoDecimalPlaces() $</span>
                </div>

                @if (!Model.IsProcessedPreorder) {
                    <button class="btn order-panel-btn btn-main-success" onclick="AddToOrder(@Model.Id, @(!Model.IsProcessedPreorder ? "true" : "false"), @(!Model.IsProcessedRetail ? "true" : "false"), 'preorder');"><span class="btn-icon"><svg class="krista-icon krista-plus"><use xlink:href="#krista-plus"></use></svg></span> Добавить</button>
                    <button class="btn order-panel-btn btn-main-danger mr-2" onclick="DeleteOrder(@Model.Id, 'preorder');"><span class="btn-icon"><svg class="krista-icon krista-delete"><use xlink:href="#krista-delete"></use></svg></span> Удалить</button>
                }
                <div class="clearfix"></div>
            </div>

            <table class="table table-striped table-bordered text-break order-details dataTable preorderTable" style="width:100%">
                <thead>
                    <tr class="table-secondary">
                        <th>Фото</th>
                        <th>Артикул</th>
                        <th>Цвет</th>
                        <th>Размер</th>
                        <th>Линеек</th>
                        <th>Единиц</th>
                        <th>Цена</th>
                        <th>Сумма</th>
                        <th>Действия</th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <td colspan="9" class="tal">
                            <div class="order-header-panel panel-gray panel-subtotal">
                                <div class="left-text-section">
                                    Итого единиц: <span class="jsOrderTotalAmountPreorder">@Model.Details.Where(x => x.CatalogId == (int)CatalogType.Preorder).Sum(x => x.Amount)</span>,
                                    на сумму: <span class="jsOrderTotalPricePreorder">@Model.Details.Where(x => x.CatalogId == (int)CatalogType.Preorder).Sum(x => x.Amount * x.Price).ToTwoDecimalPlaces() $</span>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                        </td>
                    </tr>
                </tfoot>
            </table>
        }

        @if (Model.Details.Any(x => x.CatalogId != (int)CatalogType.Preorder)) {

            <div class="order-header-panel panel-green mt-4">
                <div class="left-text-section">
                    <strong>Наличие</strong><span> @Model.CreateDate.ToBasicString() | </span>
                    Единиц: <span class="jsOrderTotalAmountInStock">@Model.Details.Where(x => x.CatalogId != (int)CatalogType.Preorder).Sum(x => x.Amount)</span> |
                    Сумма: <span class="jsOrderTotalPriceInStock">@Model.Details.Where(x => x.CatalogId != (int)CatalogType.Preorder).Sum(x => x.Amount * x.Price).ToTwoDecimalPlaces() $</span>
                </div>

                @if (!Model.IsProcessedRetail) {
                    <button class="btn order-panel-btn btn-main-success" onclick="AddToOrder(@Model.Id, @(!Model.IsProcessedPreorder ? "true" : "false"), @(!Model.IsProcessedRetail ? "true" : "false"), 'retail');"><span class="btn-icon"><svg class="krista-icon krista-plus"><use xlink:href="#krista-plus"></use></svg></span> Добавить</button>
                    <button class="btn order-panel-btn btn-main-danger mr-2" onclick="DeleteOrder(@Model.Id, 'retail');"><span class="btn-icon"><svg class="krista-icon krista-delete"><use xlink:href="#krista-delete"></use></svg></span> Удалить</button>
                }
                <div class="clearfix"></div>
            </div>

            <table class="table table-striped table-bordered text-break order-details dataTable inStockTable" style="width:100%">
                <thead>
                    <tr class="table-secondary">
                        <th>Фото</th>
                        <th>Артикул</th>
                        <th>Цвет</th>
                        <th>Размер</th>
                        <th>Линеек</th>
                        <th>Единиц</th>
                        <th>Цена</th>
                        <th>Сумма</th>
                        <th>Действия</th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <td colspan="9" class="tal">
                            <div class="order-header-panel panel-gray panel-subtotal">
                                <div class="left-text-section">
                                    Итого единиц: <span class="jsOrderTotalAmountInStock">@Model.Details.Where(x => x.CatalogId != (int)CatalogType.Preorder).Sum(x => x.Amount)</span>,
                                    на сумму: <span class="jsOrderTotalPriceInStock">@Model.Details.Where(x => x.CatalogId != (int)CatalogType.Preorder).Sum(x => x.Amount * x.Price).ToTwoDecimalPlaces() $</span>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                        </td>
                    </tr>
                </tfoot>
            </table>
        }

        <div class="order-header-panel panel-blue mt-4">
            <div class="left-text-section">
                <strong>Итого</strong>
                Единиц: <span class="jsOrderTotalAmount">@Model.Details.Sum(x => x.Amount)</span> |
                Сумма: <span class="jsOrderTotalPrice">@Model.Details.Sum(x => x.Amount * x.Price).ToTwoDecimalPlaces() $</span>
            </div>
            <div class="clearfix"></div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="addModelModal" tabindex="-1" aria-labelledby="addModelModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addModelModalLabel">Добавление модели в заказ</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Закрыть">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Список моделей
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tempusdominus-bootstrap-4/5.0.1/css/tempusdominus-bootstrap-4.min.css" />
}

@section Scripts {
    <script>
        const model = @Html.AsJsObject(Model);
        const preorderModels = @Html.AsJsObject(Model.Details.Where(x => x.CatalogId == (int)CatalogType.Preorder));
        const inStockModels = @Html.AsJsObject(Model.Details.Where(x => x.CatalogId != (int)CatalogType.Preorder));

    </script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/tempusdominus-bootstrap-4/5.0.1/js/tempusdominus-bootstrap-4.min.js"></script>
    <script src="/order-admin/js/Orders/Details.js" asp-append-version="true" type="text/javascript"></script>
    <script src="/order-admin/js/Orders/AddModel.js" asp-append-version="true" type="text/javascript"></script>
}
